# Runs tests on many versions of python, slower so only run on develop
name: Run Tests Matrix

on:
  workflow_dispatch:
  push:
    branches: [ develop, master, release/** ]
  # Runs a schedule to keep the cache fresh, caches last 7 days.
  schedule:
    - cron: "0 4 * * 6"

jobs:
  build-matrix:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]
        discordpy-version: [ 1.5.0, 1.6.0 ]
      max-parallel: 1

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip dependancies for python version
        uses: actions/cache@v2.1.4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pyv${{ matrix.python-version }}-dv${{ matrix.discordpy-version }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pyv${{ matrix.python-version }}-dv${{ matrix.discordpy-version }}pip-
      - name: Install dependencies, discord.py version ${{ matrix.discordpy-version }}
        run: |
          python -m pip install --upgrade pip
          pip install discord.py==${{ matrix.discordpy-version }}
          pip install .

      - name: Test with distest
        run: |
          ./run_tests.sh
        env:
          TARGET_ID: "582625299611648042"
          CHANNEL: "586041924129914910"
          TESTER_TOKEN: ${{ secrets.TESTER_TOKEN }}
          TARGET_TOKEN: ${{ secrets.TARGET_TOKEN }}

  test_docs_matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          clean: false
          fetch-depth: 20
      - name: Set up Python
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install .
      - name: Test Docs
        run: ./test_sphinx.sh
        shell: bash


  build-package:
    name: Build the package on 3.9
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.9
      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
          .